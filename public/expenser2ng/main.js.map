{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/localstorage.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule,Routes } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nconst routes: Routes = [\n  { path : 'login', component : LoginComponent },\n  { path : 'register', component : RegisterComponent },\n  { path : 'dashboard', component : DashboardComponent }\n ];\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports : [ RouterModule ]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'expenser2ng';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    LoginComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  dashboard works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"flex-center text-center\\\">\\n\\n<!-- Default form register -->\\n<form class=\\\"text-center border border-light p-5\\\">\\n\\n    <p class=\\\"h4 mb-4\\\">Login</p>\\n\\n    <div *ngIf=\\\"loginError\\\" class=\\\"alert alert-danger\\\">{{ loginError }}</div>\\n\\n\\n\\n    <input \\n    \\ttype=\\\"text\\\" \\n    \\trequired \\n    \\tname=\\\"email\\\"  \\n    \\t[(ngModel)]=\\\"user.email\\\"  \\n    \\tclass=\\\"form-control\\\" \\n    \\tplaceholder=\\\"Email\\\" \\n    \\t#email=\\\"ngModel\\\">\\n\\n    \\t<span *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\" class=\\\"text text-danger\\\">That's not a valid Email</span>\\n\\n    <div class=\\\"mb-4\\\"></div>\\n\\n    <!-- Password -->\\n    <input \\n    \\ttype=\\\"password\\\" \\n    \\trequired\\n    \\tname=\\\"password\\\"\\n    \\tclass=\\\"form-control\\\" \\n    \\tplaceholder=\\\"Password\\\" \\n    \\t#password=\\\"ngModel\\\"\\n    \\t[(ngModel)]=\\\"user.password\\\"\\n    />\\n\\n    <span *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\"\\n    class=\\\"text text-danger\\\">Please provide your password</span>\\n    <!-- Sign up button -->\\n    <button class=\\\"btn btn-info my-4 btn-block\\\" (click)=\\\"doLogin(user)\\\" type=\\\"submit\\\">Login</button>\\n\\n    <!-- Social register -->\\n    <p>or login with:</p>\\n\\n    <a type=\\\"button\\\" class=\\\"light-blue-text mx-2\\\">\\n        <i class=\\\"fab fa-facebook-f\\\"></i>\\n    </a>\\n    <a type=\\\"button\\\" class=\\\"light-blue-text mx-2\\\">\\n        <i class=\\\"fab fa-twitter\\\"></i>\\n    </a>\\n    <a type=\\\"button\\\" class=\\\"light-blue-text mx-2\\\">\\n        <i class=\\\"fab fa-linkedin-in\\\"></i>\\n    </a>\\n    <a type=\\\"button\\\" class=\\\"light-blue-text mx-2\\\">\\n        <i class=\\\"fab fa-github\\\"></i>\\n    </a>\\n\\n    <hr>\\n\\n    <!-- Terms of service -->\\n    <p>New user ? <a href=\\\"/register\\\">Signup here</a></p>\\n\\n</form>\\n<!-- Default form register -->\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../classes/user';\nimport { AuthService } from '../services/auth.service';\nimport { LocalstorageService } from '../services/localstorage.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  providers : [ AuthService,LocalstorageService ]\n})\nexport class LoginComponent implements OnInit {\n\n  user = { email : '', password : ''}\n  loginError = false;\n  constructor( private authService:AuthService, private localStorage:LocalstorageService, private router:Router) { }\n\n  ngOnInit() {\n  }\n\n  doLogin(user){\n  \tthis.authService.loginUser(user).subscribe( (response) => {\n  \t\tif(response.status){\n  \t\t\tthis.localStorage.setUser(response.user);\n  \t\t\tthis.router.navigate(['/dashboard']);\n  \t\t}else{\n  \t\t\tthis.loginError = response.msg;\n  \t\t}\n  \t});\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"flex-center text-center\\\">\\n\\n<!-- Default form register -->\\n<form class=\\\"text-center border border-light p-5\\\">\\n\\n    <p class=\\\"h4 mb-4\\\">Sign up</p>\\n\\n    <div *ngIf=\\\"registrationError\\\" class=\\\"alert alert-danger\\\">{{ registrationError }}</div>\\n\\n    <div class=\\\"form-row mb-4\\\">\\n        <div class=\\\"col\\\">\\n            <!-- First name -->\\n            <input \\n            \\ttype=\\\"text\\\" \\n            \\trequired \\n            \\tname=\\\"firstname\\\"  \\n            \\t[(ngModel)]=\\\"user.firstname\\\"  \\n            \\tclass=\\\"form-control\\\" \\n            \\tplaceholder=\\\"First name\\\" \\n            \\t#firstname=\\\"ngModel\\\">\\n            <span *ngIf=\\\"firstname.invalid && (firstname.dirty || firstname.touched)\\\" class=\\\"text text-danger\\\">Please tell us your first name</span>\\n        </div>\\n        <div class=\\\"col\\\">\\n            <input \\n            \\ttype=\\\"text\\\" \\n            \\trequired \\n            \\tname=\\\"lastname\\\"  \\n            \\t[(ngModel)]=\\\"user.lastname\\\"  \\n            \\tclass=\\\"form-control\\\" \\n            \\tplaceholder=\\\"Last name\\\" \\n            \\t#lastname=\\\"ngModel\\\">\\n\\n            \\t<span *ngIf=\\\"lastname.invalid && (lastname.dirty || lastname.touched)\\\" class=\\\"text text-danger\\\">..and your last name too!</span>\\n        </div>\\n    </div>\\n\\n    <input \\n    \\ttype=\\\"text\\\" \\n    \\trequired \\n    \\tname=\\\"email\\\"  \\n    \\t[(ngModel)]=\\\"user.email\\\"  \\n    \\tclass=\\\"form-control\\\" \\n    \\tplaceholder=\\\"Email\\\" \\n    \\t#email=\\\"ngModel\\\">\\n\\n    \\t<span *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\" class=\\\"text text-danger\\\">That's not a valid Email</span>\\n\\n    <div class=\\\"mb-4\\\"></div>\\n\\n    <!-- Password -->\\n    <input type=\\\"password\\\" id=\\\"defaultRegisterFormPassword\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" aria-describedby=\\\"defaultRegisterFormPasswordHelpBlock\\\">\\n    <small id=\\\"defaultRegisterFormPasswordHelpBlock\\\" class=\\\"form-text text-muted mb-4\\\">\\n        At least 8 characters and 1 digit\\n    </small>\\n\\n    <!-- Newsletter -->\\n    <div class=\\\"custom-control custom-checkbox\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"defaultRegisterFormNewsletter\\\">\\n        <label class=\\\"custom-control-label\\\" for=\\\"defaultRegisterFormNewsletter\\\">Subscribe to our newsletter</label>\\n    </div>\\n\\n    <!-- Sign up button -->\\n    <button class=\\\"btn btn-info my-4 btn-block\\\" (click)=\\\"registerUser()\\\" type=\\\"submit\\\">Sign up</button>\\n\\n    <!-- Social register -->\\n    <p>or sign up with:</p>\\n\\n    <a type=\\\"button\\\" class=\\\"light-blue-text mx-2\\\">\\n        <i class=\\\"fab fa-facebook-f\\\"></i>\\n    </a>\\n    <a type=\\\"button\\\" class=\\\"light-blue-text mx-2\\\">\\n        <i class=\\\"fab fa-twitter\\\"></i>\\n    </a>\\n    <a type=\\\"button\\\" class=\\\"light-blue-text mx-2\\\">\\n        <i class=\\\"fab fa-linkedin-in\\\"></i>\\n    </a>\\n    <a type=\\\"button\\\" class=\\\"light-blue-text mx-2\\\">\\n        <i class=\\\"fab fa-github\\\"></i>\\n    </a>\\n\\n    <hr>\\n\\n    <!-- Terms of service -->\\n    <p>By clicking\\n        <em>Sign up</em> you agree to our\\n        <a href=\\\"\\\" target=\\\"_blank\\\">terms of service</a>\\n\\n</form>\\n<!-- Default form register -->\\n\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from '../classes/user';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  providers : [ AuthService ],\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  user: User = {\n     firstname : 'vipin',\n     lastname : 'kumar',\n     email : 'vipins10@mail.com',\n     password : 'mypassword'\n  };\n\n  registrationError = false;\n \n  constructor(private authService:AuthService,private router:Router) { }\n\n  ngOnInit() {}\n\n  registerUser(user){\n     this.authService.registerUser(this.user).subscribe( (response) => {\n\n        console.log(response)\n        if(response.status == true){\n            this.router.navigate(['/login']);\n        }else{\n            this.registrationError = response.msg;\n        }\n    })\n  }\n\n} \n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\n\nexport class AuthService{\n\n\tregisterUrl = 'api/register';\n\tloginUrl = 'api/login';\n\n\tconstructor(private http:HttpClient){ }\n\n\tregisterUser(userData){\n\t\treturn this.http.post<any>(this.registerUrl,userData);\n\t}\n\n\tloginUser(userData){\n\t\treturn this.http.post<any>(this.loginUrl,userData);\n\t}\n}","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalstorageService {\n\n\t  constructor() { }\n\n\t  getItem(itemName){\n\t  \titem = localStorage.getItem(itemName);\n\t  \tif(item == '')\n\t  \t\treturn false;\n\t  \treturn JSON.parse(item);\n\t  }\n\n\t  setItem(itemName,itemValue){\n\t  \tlocalStorage.setItem(itemName,itemValue);\n\t  }\n\n\t  setUser(user){\n\t  \tthis.setItem('user',JSON.stringify(user));\n\t  }\n\n\t  getUser(){\n\t  \treturn this.getItem('uuid');\n\t  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}